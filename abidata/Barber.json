[
  "event Deposit(address indexed user, uint256 indexed pid, uint256 amount)",
  "event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event SetDevAddress(address indexed user, address indexed newAddress)",
  "event SetFeeAddress(address indexed user, address indexed newAddress)",
  "event UpdateEmissionRate(address indexed user, uint256 hairPerBlock)",
  "event Withdraw(address indexed user, uint256 indexed pid, uint256 amount)",
  "function MAX_HAIR_PER_BLOCK() view returns (uint256)",
  "function add(uint256 _allocPoint, address _lpToken, uint16 _depositFeeBP, bool _withUpdate)",
  "function deposit(uint256 _pid, uint256 _amount)",
  "function devAddress() view returns (address)",
  "function emergencyWithdraw(uint256 _pid)",
  "function feeAddress() view returns (address)",
  "function getMultiplier(uint256 _from, uint256 _to) pure returns (uint256)",
  "function hair() view returns (address)",
  "function hairPerBlock() view returns (uint256)",
  "function massUpdatePools()",
  "function owner() view returns (address)",
  "function pendingHair(uint256 _pid, address _user) view returns (uint256)",
  "function poolExistence(address) view returns (bool)",
  "function poolInfo(uint256) view returns (address lpToken, uint256 allocPoint, uint256 lastRewardBlock, uint256 accHairPerShare, uint16 depositFeeBP)",
  "function poolLength() view returns (uint256)",
  "function renounceOwnership()",
  "function set(uint256 _pid, uint256 _allocPoint, uint16 _depositFeeBP, bool _withUpdate)",
  "function setDevAddress(address _devAddress)",
  "function setFeeAddress(address _feeAddress)",
  "function startBlock() view returns (uint256)",
  "function totalAllocPoint() view returns (uint256)",
  "function transferOwnership(address newOwner)",
  "function updateEmissionRate(uint256 _hairPerBlock)",
  "function updatePool(uint256 _pid)",
  "function userInfo(uint256, address) view returns (uint256 amount, uint256 rewardDebt)",
  "function withdraw(uint256 _pid, uint256 _amount)"
]
